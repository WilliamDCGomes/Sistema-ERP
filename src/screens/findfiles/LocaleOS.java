package screens.findfiles;
import callframes.CallOtherFrame;
import functioncontroller.LimitNumberCharacters;
import javax.swing.JFrame;
import screens.backlog.BacklogOS;
import screens.files.editfiles.OSEditOS;
import setsoons.SetAndOrganizeSoons;
import conexaobd.ModuloConexao;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author willi
 */
public class LocaleOS extends setsoons.AuxiliaryJFrame {
    Connection conexao = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    /**
     * Creates new form LocaleOS
     */
    public LocaleOS() {
        initComponents();
        inputSerialDevice.setDocument(new LimitNumberCharacters());
        inputCodeDevice.setDocument(new LimitNumberCharacters());
        conexao = ModuloConexao.conector();
    }
    SetAndOrganizeSoons setAndOrganizeSoons = new SetAndOrganizeSoons();
    boolean inicializedWindow = false;
    private void callOtherScreen(JFrame screen){
        CallOtherFrame callOtherFrame = new CallOtherFrame();
        callOtherFrame.callOtherScreen(screen);
    }
    private void localeBySerial(){
        String sqlnome = "select * from os where serial_os=?";
        try {
            pst = conexao.prepareStatement(sqlnome);
            pst.setString(1,inputSerialDevice.getText());
            rs = pst.executeQuery();
            if (rs.next()) {
                OSEditOS editOS = new OSEditOS();
                editOS.setVisible(true);
                editOS.inputSerialDevice.setText(rs.getString(1));
                editOS.inputCodeDevice.setText(rs.getString(2));
                editOS.inputNameDevice.setText(rs.getString(3));
                editOS.inputDateOfOpening.setText(rs.getString(4));
                //editOS.inputSerialDevice.setText(rs.getString(1));
                //editOS.inputSerialDevice.setText(rs.getString(1));
                editOS.inputObservations.setText(rs.getString(7));
                this.dispose();
            }
            else{
                JOptionPane.showMessageDialog(null,"OS NÃO ENCONTRADA NO BANCO DE DADOS!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }
    private void localeByCode(){
        String sql = "select serial_os as SERIAL,codigo_os as CÓDIGO,nome_os as NOME,date_os as 'DATA DE ENTRADA',situacao_os as 'SITUAÇÃO DA OS' from os where codigo_os = ?";
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1,inputCodeDevice.getText());
            rs=pst.executeQuery();
            BacklogOS backlogOS = new BacklogOS();
            backlogOS.setVisible(true);
            backlogOS.tableBacklogOS.setModel(DbUtils.resultSetToTableModel(rs));
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        soonTavile = new javax.swing.JLabel();
        soonProxxi = new javax.swing.JLabel();
        txtSerial = new javax.swing.JLabel();
        txtCodeDevice = new javax.swing.JLabel();
        inputCodeDevice = new javax.swing.JTextField();
        buttonFindDevice = new javax.swing.JButton();
        txtFindDevice = new javax.swing.JLabel();
        buttonAllFindDevice = new javax.swing.JButton();
        inputSerialDevice = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Localizar Equipamento");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        txtSerial.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtSerial.setText("Serial");

        txtCodeDevice.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtCodeDevice.setText("Código do equipamento");

        inputCodeDevice.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        inputCodeDevice.setForeground(new java.awt.Color(51, 51, 51));
        inputCodeDevice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputCodeDeviceKeyPressed(evt);
            }
        });

        buttonFindDevice.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        buttonFindDevice.setText("Localizar");
        buttonFindDevice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFindDeviceActionPerformed(evt);
            }
        });

        txtFindDevice.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        txtFindDevice.setText("Localizar Equipamento");

        buttonAllFindDevice.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        buttonAllFindDevice.setText("Todos os Equipamentos");
        buttonAllFindDevice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAllFindDeviceActionPerformed(evt);
            }
        });

        inputSerialDevice.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        inputSerialDevice.setForeground(new java.awt.Color(51, 51, 51));
        inputSerialDevice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputSerialDeviceKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(soonTavile, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 185, Short.MAX_VALUE)
                .addComponent(soonProxxi, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonFindDevice)
                        .addGap(41, 41, 41)
                        .addComponent(buttonAllFindDevice)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCodeDevice)
                            .addComponent(txtSerial))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(inputSerialDevice)
                            .addComponent(inputCodeDevice))
                        .addGap(38, 38, 38))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtFindDevice)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(soonTavile, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(soonProxxi, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFindDevice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSerial)
                    .addComponent(inputSerialDevice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodeDevice)
                    .addComponent(inputCodeDevice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonFindDevice)
                    .addComponent(buttonAllFindDevice))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(547, 311));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if(inicializedWindow==false){
            inicializedWindow = true;
            setAndOrganizeSoons.SetSoons(this);
            setAndOrganizeSoons.SetLocationSoons(this, soonTavile.getX(), soonTavile.getY(), soonProxxi.getX(), soonProxxi.getY());
        }
    }//GEN-LAST:event_formWindowActivated

    private void inputCodeDeviceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputCodeDeviceKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputCodeDeviceKeyPressed

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        setAndOrganizeSoons.SetLocationSoons(this, soonTavile.getX(), soonTavile.getY(), soonProxxi.getX(), soonProxxi.getY());
    }//GEN-LAST:event_formComponentResized

    private void buttonFindDeviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFindDeviceActionPerformed
        if(inputSerialDevice.getText().equals("")&&inputCodeDevice.getText().equals("")){
            JOptionPane.showMessageDialog(null,"INSIRA ALGUMA INFORMAÇÃO PARA REALIZAR A PESQUISA!");
        }
        else if(inputSerialDevice.getText().equals("")){
            BacklogOS backlogOS = new BacklogOS();
            this.dispose();
            backlogOS.txtScreenBacklog.setText("Equipamentos");
            backlogOS.setTitle("Equipamentos");
            localeByCode();
        }
        else{
            OSEditOS editOS = new OSEditOS();
            editOS.txtEquipamentEditEquipament.setText("Equipamento");
            editOS.buttonCadastreEdit.setText("EDITAR");
            editOS.setTitle("Equipamento");
            localeBySerial();
        }
    }//GEN-LAST:event_buttonFindDeviceActionPerformed

    private void buttonAllFindDeviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAllFindDeviceActionPerformed
        BacklogOS backlogOS = new BacklogOS();
        this.dispose();
        backlogOS.txtScreenBacklog.setText("Todos os Equipamentos");
        backlogOS.setTitle("Todos os Equipamentos");
        callOtherScreen(backlogOS);
    }//GEN-LAST:event_buttonAllFindDeviceActionPerformed

    private void inputSerialDeviceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputSerialDeviceKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputSerialDeviceKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LocaleOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LocaleOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LocaleOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LocaleOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LocaleOS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAllFindDevice;
    private javax.swing.JButton buttonFindDevice;
    private javax.swing.JTextField inputCodeDevice;
    private javax.swing.JTextField inputSerialDevice;
    public static javax.swing.JLabel soonProxxi;
    public static javax.swing.JLabel soonTavile;
    private javax.swing.JLabel txtCodeDevice;
    private javax.swing.JLabel txtFindDevice;
    private javax.swing.JLabel txtSerial;
    // End of variables declaration//GEN-END:variables
}
